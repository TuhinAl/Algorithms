#include<bits/stdc++.h>

using namespace std;

struct Vertex {
	char name;
	int mark;
	struct Node* list;
};
struct Node {
	struct Vertex* vertex;
	struct Node* next;
};

Vertex* new_vertex(char name)
{
    Vertex* vertex= (Vertex*)malloc(sizeof(vertex));
    vertex->name=name;
    vertex->list=0;
    vertex->mark=0;
    return vertex;

}

//insert b in the adj list of a
void do_connect(Vertex* a, Vertex* b)
{
    Node* node = (Node*)malloc (sizeof(Node)) ;
    node->vertex=b;
    node->next=a->list;
    a->list=node;
}

void connect(Vertex* a, Vertex* b){
    do_connect(a,b);
    do_connect(b,a);
}

int main ()
{

Vertex* graph[10]= {new_vertex('A'),new_vertex('B'),new_vertex('C'),new_vertex('D'),new_vertex('E'),new_vertex('F'),new_vertex('G'),new_vertex('H'),new_vertex('I'),new_vertex('J')};
Vertex** p= graph;
/*p->name;
p->mark;
p->list;*/
//cout<<((*p)->name)<<" "<<((*p)->mark)<<" "<<((*p)->list);



connect(graph[0],graph[2]);
connect(graph[0],graph[4]);
connect(graph[0],graph[3]);
connect(graph[1],graph[4]);
connect(graph[1],graph[5]);
connect(graph[2],graph[3]);
connect(graph[2],graph[5]);
connect(graph[4],graph[5]);
connect(graph[6],graph[7]);
connect(graph[6],graph[9]);
connect(graph[7],graph[8]);
connect(graph[8],graph[9]);
    for( int i =1;i<10;i++)
{
    cout<<((*p)->name)<<" "<<((*p)->mark)<<" "<<endl;
    Node* q=(*p)->list;
    *p++;
   //cout<< Vertex->name;
}


return 0;
}
